version: '3.9'

services:
    db:
        container_name: zach_blog_db_prod
        image: mysql:8.0
        restart: always
        command: mysqld --default-authentication-plugin=mysql_native_password
        volumes:
          - ./data:/var/lib/mysql
        env_file:
          - ./.env.prod
        environment:
          - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
          - MYSQL_USER=${SQL_USER}
          - MYSQL_PASSWORD=${SQL_PASSWORD}
          - MYSQL_DATABASE=${SQL_DATABASE}
          - MYSQL_HOST=${SQL_HOST}
        ports:
          - 3306:3306

    nginx:
        container_name: zach_blog_ngnix_prod
        restart: always
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - 80:80
            - 443:443
        volumes:
            - .:/code
            - static_volume:/code/backend/django_static
            - ./docker/nginx/production:/etc/nginx/conf.d
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        depends_on:
            - backend

    # Volume for certificate renewal
    certbot:
        container_name: zach_blog_certbot_prod
        image: certbot/certbot
        restart: always
        volumes:
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    backend:
        container_name: zach_blog_backend_prod
        restart: always
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile

        entrypoint: /code/docker/backend/wsgi-entrypoint.sh
        volumes:
            - .:/code
            - static_volume:/code/backend/django_static
        env_file:
            - ./.env.prod
        expose:
            - 8000
        depends_on:
            - db
        ports:
            - "8000:8000"
        links:
            - db

volumes:
    static_volume: { }
    pgdata: { }
